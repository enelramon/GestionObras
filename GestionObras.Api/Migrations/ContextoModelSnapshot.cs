// <auto-generated />
using GestionObras.Api.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionObras.Api.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("GestionObras.Api.Models.Adelantos", b =>
                {
                    b.Property<int>("AdelantoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Balance")
                        .HasColumnType("REAL");

                    b.Property<string>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<double>("Monto")
                        .HasColumnType("REAL");

                    b.Property<int>("PersonaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProyectoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AdelantoId");

                    b.ToTable("Adelantos");
                });

            modelBuilder.Entity("GestionObras.Api.Models.Nominas", b =>
                {
                    b.Property<int>("NominaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Estado")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<int>("PersonaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProyectoId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Total")
                        .HasColumnType("REAL");

                    b.HasKey("NominaId");

                    b.HasIndex("ProyectoId");

                    b.ToTable("Nominas");
                });

            modelBuilder.Entity("GestionObras.Api.Models.NominasDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Balance")
                        .HasColumnType("REAL");

                    b.Property<double>("Cantidad")
                        .HasColumnType("REAL");

                    b.Property<string>("Fecha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NominaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PersonaId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Precio")
                        .HasColumnType("REAL");

                    b.Property<int>("ProyectoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TipoTrabajo")
                        .HasColumnType("TEXT");

                    b.Property<int>("personasPersonaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("proyectosProyectoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("tiposTrabajosTipoTrabajoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("NominaId");

                    b.HasIndex("personasPersonaId");

                    b.HasIndex("proyectosProyectoId");

                    b.HasIndex("tiposTrabajosTipoTrabajoId");

                    b.ToTable("NominasDetalle");
                });

            modelBuilder.Entity("GestionObras.Api.Models.Pagos", b =>
                {
                    b.Property<int>("PagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AdelantoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<double>("Monto")
                        .HasColumnType("REAL");

                    b.Property<string>("PersonaId")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProyectoId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Total")
                        .HasColumnType("REAL");

                    b.HasKey("PagoId");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("GestionObras.Api.Models.Personas", b =>
                {
                    b.Property<int>("PersonaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombres")
                        .HasColumnType("TEXT");

                    b.Property<double>("Precio")
                        .HasColumnType("REAL");

                    b.Property<int>("ProyectoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Telefono")
                        .HasColumnType("TEXT");

                    b.Property<int>("TipoTrabajoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PersonaId");

                    b.ToTable("Personas");

                    b.HasData(
                        new
                        {
                            PersonaId = 1,
                            Nombres = "Manuel",
                            Precio = 0.0,
                            ProyectoId = 0,
                            Telefono = "829-811-4569",
                            TipoTrabajoId = 0
                        },
                        new
                        {
                            PersonaId = 2,
                            Nombres = "Samuel",
                            Precio = 0.0,
                            ProyectoId = 0,
                            Telefono = "829-846-5619",
                            TipoTrabajoId = 0
                        },
                        new
                        {
                            PersonaId = 3,
                            Nombres = "Juan",
                            Precio = 0.0,
                            ProyectoId = 0,
                            Telefono = "809-578-1978",
                            TipoTrabajoId = 0
                        },
                        new
                        {
                            PersonaId = 4,
                            Nombres = "Ana",
                            Precio = 0.0,
                            ProyectoId = 0,
                            Telefono = "849-678-6719",
                            TipoTrabajoId = 0
                        },
                        new
                        {
                            PersonaId = 5,
                            Nombres = "Josefa",
                            Precio = 0.0,
                            ProyectoId = 0,
                            Telefono = "849-789-1290",
                            TipoTrabajoId = 0
                        });
                });

            modelBuilder.Entity("GestionObras.Api.Models.Proyectos", b =>
                {
                    b.Property<int>("ProyectoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.HasKey("ProyectoId");

                    b.ToTable("Proyectos");

                    b.HasData(
                        new
                        {
                            ProyectoId = 1,
                            Descripcion = "Casa de Enel"
                        });
                });

            modelBuilder.Entity("GestionObras.Api.Models.TiposTrabajos", b =>
                {
                    b.Property<int>("TipoTrabajoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProyectoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("descripcion")
                        .HasColumnType("TEXT");

                    b.Property<double>("precio")
                        .HasColumnType("REAL");

                    b.HasKey("TipoTrabajoId");

                    b.ToTable("TiposTrabajos");

                    b.HasData(
                        new
                        {
                            TipoTrabajoId = 1,
                            ProyectoId = 0,
                            descripcion = "Carpinteria x dia",
                            precio = 2000.0
                        },
                        new
                        {
                            TipoTrabajoId = 2,
                            ProyectoId = 0,
                            descripcion = "Ayudante Carpintero",
                            precio = 1000.0
                        });
                });

            modelBuilder.Entity("GestionObras.Api.Models.Nominas", b =>
                {
                    b.HasOne("GestionObras.Api.Models.Proyectos", "proyectos")
                        .WithMany()
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("proyectos");
                });

            modelBuilder.Entity("GestionObras.Api.Models.NominasDetalle", b =>
                {
                    b.HasOne("GestionObras.Api.Models.Nominas", "nominas")
                        .WithMany("nominasDetalle")
                        .HasForeignKey("NominaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionObras.Api.Models.Personas", "personas")
                        .WithMany()
                        .HasForeignKey("personasPersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionObras.Api.Models.Proyectos", "proyectos")
                        .WithMany()
                        .HasForeignKey("proyectosProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionObras.Api.Models.TiposTrabajos", "tiposTrabajos")
                        .WithMany()
                        .HasForeignKey("tiposTrabajosTipoTrabajoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("nominas");

                    b.Navigation("personas");

                    b.Navigation("proyectos");

                    b.Navigation("tiposTrabajos");
                });

            modelBuilder.Entity("GestionObras.Api.Models.Nominas", b =>
                {
                    b.Navigation("nominasDetalle");
                });
#pragma warning restore 612, 618
        }
    }
}
